setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
test <- list.files("16_02_2021/")
tes
test
data <- sapply(test, read.table)
test <- paste("16_02_2021/", test, sep="")
test
data <- sapply(test, read.table)
data
data <- sapply(test, read.table(skip = 12))
data <- sapply(test, function(x) {read.table(x, skip = 12)})
data
data[]
data[1]
dim(data)
head(data)
View(data)
View(data)
View(data)
typeof(data)
data <- lapply(test, function(x) {read.table(x, skip = 12)})
typeof(data)
data
head(data)
head(data)
View(data)
data <- sapply(test, function(x) {read.table(x, skip = 12)})
data <- sapply(test, function(x) {read.table(x, skip = 12)})
View(data)
test <- list.files("16_02_2021/")
data <- lapply(test, function(x) {read.table(paste(x, test, sep=""), skip = 12)})
test <- list.files("16_02_2021/")
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 12)})
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 12)})
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrow = 12)})
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 12, sep = "\t")})
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrow = 12, sep = "\t")})
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
test <- list.files("16_02_2021/")
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 12, sep = "\t")})
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrow = 12, sep = "\t")})
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
test <- list.files("16_02_2021/")
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 12, sep = "\t")})
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrows = 12, sep = "\t")})
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrows = 1, sep = "\t")})
data2
data2 <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), nrows = 11, sep = "\t")})
data2
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 11, sep = "\t")})
data
data[[1]]
data[[1]][1]
data[[1]]
head(data[[1]])
data <- lapply(test, function(x) {read.table(paste("16_02_2021/", x, sep=""), skip = 11, sep = "\t", header = TRUE)})
data
head(data[[1]])
source('C:/Moje pliki/Eclipse/information-vector-model/results/16_02_2021.R', echo=TRUE)
data <- lapply(rawData, summarise(message_id = n()))
library(dplyr)
data <- lapply(rawData, summarise(message_id = n()))
data
params <- 11
dirName <- "16_02_2021/"
fileNames <- list.files(dirName)
rawData <- lapply(fileNames, function(x) {read.table(paste(dirName, x, sep=""), skip = params, sep = "\t", header = TRUE)})
parameters <- lapply(fileNames, function(x) {read.table(paste(dirName, x, sep=""), nrows = params, sep = "\t")})
data <- lapply(rawData, summarise(message_id = n()))
data <- lapply(rawData, function(x) {x %>% summarise(message_id = n())})
data
data <- lapply(rawData, function(x) {x %>% group_by(message_id) %>% summarise(message_id = n())})
data
data <- lapply(rawData, function(x) {x %>% summarise(n = n())})
data
data <- lapply(rawData, function(x) {x %>% group_by(message_id) %>% summarise(counts = n())})
data
typeof(data)
unlist(data)
head(unlist(data))
unlist(data, recursive = FALSE)
dim(unlist(data, recursive = FALSE))
head(unlist(data, recursive = FALSE))
data
data[[1]]
rbind(data[[1]], data[[2]])
data <- lapply(rawData, function(x) {data.frame(x %>% group_by(message_id) %>% summarise(counts = n()))})
data
bind_rows(data)
data <- bind_rows(data, .id = "column_label")
data
tail(column_label)
tail(data)
#data <- bind_rows(data, .id = "realisation")
data <- bind_rows(data)
hist(data$counts)
timeHistogram <- function() {
breaks <- 200
histogram <- hist(data)
sum <- sum(histogram$counts)
histogram <- data.frame(x = histogram$mids, y = histogram$counts/sum)
histogram <- histogram[histogram$range != 0,]
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("czas życia informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(limits = c(0, 250000)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides="l")
print(plot)
}
timeHistogram()
timeHistogram <- function() {
breaks <- 200
histogram <- hist(data)
sum <- sum(histogram$counts)
histogram <- data.frame(x = histogram$mids, y = histogram$counts/sum)
histogram <- histogram[histogram$range != 0,]
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("czas życia informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(limits = c(0, 250000)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides="l")
print(plot)
}
breaks <- 200
histogram <- hist(data)
histogram <- hist(data$counts)
sum <- sum(histogram$counts)
histogram <- data.frame(x = histogram$mids, y = histogram$counts/sum)
histogram <- histogram[histogram$range != 0,]
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("czas życia informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(limits = c(0, 250000)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides="l")
library(scales)
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("czas życia informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(limits = c(0, 250000)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides="l")
print(plot)
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("czas życia informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides="l")
print(plot)
xlab("liczba udost") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(labels = math_format(10^.x),
limits = c(0, 3),
breaks = seq(0,5)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x)),
limits = c(.3*10^-8, 10^0),
breaks = 10^(-9:0)) +
annotation_logticks(sides="lb")
print(plot)
}
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("liczba udostepnien jednej informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(labels = math_format(10^.x),
limits = c(0, 3),
breaks = seq(0,5)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x)),
limits = c(.3*10^-8, 10^0),
breaks = 10^(-9:0)) +
annotation_logticks(sides="lb")
print(plot)
histogram
breaks <- 200
histogram <- hist(data$counts)
histogram
breaks <- 220
histogram <- hist(log10(data$counts), breaks = breaks)
factor <- 10^histogram$breaks[-1] - 10^histogram$breaks[-length(histogram$breaks)]
factor
breaks <- 220
histogram <- hist(log10(data$counts), breaks = breaks)
factor <- 10^histogram$breaks[-1] - 10^histogram$breaks[-length(histogram$breaks)]
sum <- sum(histogram$counts/factorNON)
sum <- sum(histogram$counts/factorNON)
breaks <- 220
histogram <- hist(log10(data$counts), breaks = breaks)
factor <- 10^histogram$breaks[-1] - 10^histogram$breaks[-length(histogram$breaks)]
sum <- sum(histogram$counts/factor)
histogram <- data.frame(x = histogram$mids, y = histogram$counts/factor/sum)
histogram <- histogram[histogram$range != 0,]
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("liczba udostepnien jednej informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(labels = math_format(10^.x),
limits = c(0, 3),
breaks = seq(0,5)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x)),
limits = c(.3*10^-8, 10^0),
breaks = 10^(-9:0)) +
annotation_logticks(sides="lb")
print(plot)
histogram
breaks <- 220
histogram <- hist(log10(data$counts), breaks = breaks)
factor <- 10^histogram$breaks[-1] - 10^histogram$breaks[-length(histogram$breaks)]
sum <- sum(histogram$counts/factor)
histogram <- data.frame(x = histogram$mids, y = histogram$counts/factor/sum)
histogram
histogram <- histogram[histogram$y != 0,]
histogram
plot <- ggplot(data = histogram, aes(x = x, y = y)) +
geom_point(size = 3) +
theme(
text=element_text(size=28),
axis.text=element_text(color="black"),
axis.ticks.length = unit(0, "cm"),
plot.title=element_text(hjust=0.5),
panel.border=element_rect(fill=NA),
panel.background=element_blank(),
legend.key=element_rect(fill=NA, color=NA),
legend.background=element_rect(fill=(alpha("white", 0))),
legend.title=element_blank(),
legend.position=c(0.6, 0.8),
legend.box.background=element_rect(colour = "black"),
legend.spacing.y = unit(0, "mm")
) +
scale_color_manual(values=c("#4A3678", "#FF62AA"),
breaks=c("all", "non"),
labels=c("alfa = 0,05 (możliwość edycji)", "alfa = 0 (brak możliwości edycji)")) +
xlab("liczba udostepnien jednej informacji") +
ylab("gęstość prawdopodobieństwa") +
scale_x_continuous(labels = math_format(10^.x),
limits = c(0, 3),
breaks = seq(0,5)) +
scale_y_continuous(trans = 'log10',
labels = trans_format("log10", math_format(10^.x)),
limits = c(.3*10^-8, 10^0),
breaks = 10^(-9:0)) +
annotation_logticks(sides="lb")
print(plot)
